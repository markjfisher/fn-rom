2 REM filename: 8OSFILE
3 REM Comprehensive OSFILE operations test
4 REM Tests A=0 (save), A=1 (update cat), A=2 (wr load), A=3 (wr exec), A=4 (wr attr), A=5 (rd cat), A=6 (delete)
10 REM Initialize OSFILE parameter block
20 DIM P% 17
30 REM Step 1: OSFILE A=0 - Save memory block
40 PRINT "Step 1: Save memory block (A=0)"
50 $P%="TESTF1"+CHR$(13)
60 P%!2=&1900:REM Load address
70 P%!6=&1900:REM Exec address
80 P%!10=&3000:REM Start address
90 P%!14=&3010:REM End address (16 bytes)
100 REM Put test data at &3000
110 ?&3000=65:?&3001=66:?&3002=67:?&3003=68
120 A%=0:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
130 PRINT "Created TESTF1 (16 bytes)"
140 REM Step 2: OSFILE A=5 - Read catalog info
150 PRINT "Step 2: Read catalog info (A=5)"
160 $P%="TESTF1"+CHR$(13)
170 A%=5:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
180 PRINT "Load=";~P%!2;" Exec=";~P%!6;" Len=";~P%!10
190 IF P%!2<>&1900 THEN PRINT "ERROR: Load addr wrong":END
200 IF P%!10<>16 THEN PRINT "ERROR: Length wrong":END
210 REM Step 3: OSFILE A=1 - Update catalog (change load/exec)
220 PRINT "Step 3: Update catalog (A=1)"
230 $P%="TESTF1"+CHR$(13)
240 P%!2=&2000:REM New load address
250 P%!6=&2100:REM New exec address
260 A%=1:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
270 PRINT "Updated load=&2000, exec=&2100"
280 REM Step 4: Read back to verify
290 PRINT "Step 4: Verify update (A=5)"
300 $P%="TESTF1"+CHR$(13)
310 A%=5:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
320 IF P%!2<>&2000 THEN PRINT "ERROR: Load not updated":END
330 IF P%!6<>&2100 THEN PRINT "ERROR: Exec not updated":END
340 PRINT "Verified load=";~P%!2;" exec=";~P%!6
350 REM Step 5: OSFILE A=2 - Write load address only
360 PRINT "Step 5: Write load addr only (A=2)"
370 $P%="TESTF1"+CHR$(13)
380 P%!2=&3000:REM New load address
390 A%=2:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
400 PRINT "Changed load to &3000"
410 REM Step 6: OSFILE A=3 - Write exec address only
420 PRINT "Step 6: Write exec addr only (A=3)"
430 $P%="TESTF1"+CHR$(13)
440 P%!6=&3100:REM New exec address
450 A%=3:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
460 PRINT "Changed exec to &3100"
470 REM Step 7: Verify both changes
480 PRINT "Step 7: Verify changes (A=5)"
490 $P%="TESTF1"+CHR$(13)
500 A%=5:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
510 IF P%!2<>&3000 THEN PRINT "ERROR: Load A=2 failed":END
520 IF P%!6<>&3100 THEN PRINT "ERROR: Exec A=3 failed":END
530 PRINT "Verified load=";~P%!2;" exec=";~P%!6
540 REM Step 8: OSFILE A=4 - Lock file
550 PRINT "Step 8: Lock file (A=4)"
560 $P%="TESTF1"+CHR$(13)
570 P%?14=8:REM Set locked bit
580 A%=4:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
590 PRINT "File locked"
600 REM Step 9: Verify file is locked with *INFO
610 PRINT "Step 9: Check locked status"
620 *INFO TESTF1
630 PRINT "Should show 'L' for locked"
640 PRINT "Press key to continue"
650 A$=GET$
660 REM Step 10: Try to delete locked file (should fail)
670 PRINT "Step 10: Try delete locked file"
680 ON ERROR PRINT "Good: Cannot delete locked":GOTO 710
690 *DELETE TESTF1
700 PRINT "ERROR: Deleted locked file!":END
710 ON ERROR OFF
720 REM Step 11: Unlock file
730 PRINT "Step 11: Unlock file (A=4)"
740 $P%="TESTF1"+CHR$(13)
750 P%?14=0:REM Clear locked bit
760 A%=4:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
770 PRINT "File unlocked"
780 REM Step 12: OSFILE A=6 - Delete file
790 PRINT "Step 12: Delete file (A=6)"
800 $P%="TESTF1"+CHR$(13)
810 A%=6:X%=P% MOD 256:Y%=P% DIV 256:CALL &FFDD
820 PRINT "File deleted"
830 REM Step 13: Verify deletion
840 PRINT "Step 13: Verify file gone"
850 H%=OPENIN("TESTF1")
860 IF H%<>0 THEN PRINT "ERROR: File still exists":CLOSE#H%:END
870 PRINT "Confirmed: File deleted"
880 REM Final status
890 PRINT:PRINT "*** ALL OSFILE TESTS PASSED ***"
900 *INFO *

